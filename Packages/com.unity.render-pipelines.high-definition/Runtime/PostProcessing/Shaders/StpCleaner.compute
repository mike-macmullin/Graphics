#pragma kernel StpCleaner

#pragma multi_compile _ UNITY_DEVICE_SUPPORTS_NATIVE_16BIT

#pragma only_renderers d3d11 playstation xboxone xboxseries vulkan metal switch

#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Color.hlsl"
#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"

TEXTURE2D_X(_StpFeedback);

RW_TEXTURE2D_X(float4, _StpColor);

#define STP_CLN 1
#define STP_FEEDBACK_TEXTURE _StpFeedback

// The cleaner pass is only compatible with Config 1 so we just define it unconditionally here.
#define STP_CONFIG_1 1
#include "Packages/com.unity.render-pipelines.core/Runtime/PostProcessing/Shaders/StpCommon.hlsl"

#define THREADING_BLOCK_SIZE 64
#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Threading.hlsl"

[numthreads(64, 1, 1)]
void StpCleaner(Threading::Group group)
{
    UNITY_XR_ASSIGN_VIEW_INDEX(group.groupID.z);

    uint2 pos = (group.groupID.xy << 3) + group.RemapLaneTo8x16();

    half4 color;

    ApplyStpCleaner(
        color,
        pos
    );

    _StpColor[COORD_TEXTURE2D_X(pos)] = color;
}
