#pragma kernel StpTaa

#pragma multi_compile _ ENABLE_QUALITY_MODE
#pragma multi_compile _ UNITY_DEVICE_SUPPORTS_NATIVE_16BIT

#pragma only_renderers d3d11 playstation xboxone xboxseries vulkan metal switch

#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Color.hlsl"
#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"

TEXTURE2D_X(_StpIntermediateColor);
TYPED_TEXTURE2D_X(uint, _StpDepthMotion);
TEXTURE2D_X(_StpLuma);
TEXTURE2D_X(_StpPriorFeedback);

RW_TEXTURE2D_X(float4, _StpFeedback);

#if !ENABLE_QUALITY_MODE
RW_TEXTURE2D_X(float4, _StpColor);
#endif

#define STP_TAA 1
#define STP_POINT_CLAMP_SAMPLER s_point_clamp_sampler
#define STP_LINEAR_CLAMP_SAMPLER s_linear_clamp_sampler
#define STP_INTERMEDIATE_COLOR_TEXTURE _StpIntermediateColor
#define STP_LUMA_TEXTURE _StpLuma
#define STP_DEPTH_MOTION_TEXTURE _StpDepthMotion
#define STP_PRIOR_FEEDBACK_TEXTURE _StpPriorFeedback

#if ENABLE_QUALITY_MODE
    #define STP_CONFIG_1 1
#endif

#include "Packages/com.unity.render-pipelines.core/Runtime/PostProcessing/Shaders/StpCommon.hlsl"

#define THREADING_BLOCK_SIZE 64
#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Threading.hlsl"

[numthreads(64, 1, 1)]
void StpTaa(Threading::Group group)
{
    UNITY_XR_ASSIGN_VIEW_INDEX(group.groupID.z);

    uint2 pos = (group.groupID.xy << 3) + group.RemapLaneTo8x16();

    half4 color;
    half4 feedback;

    ApplyStpTaa(
        color,
        feedback,
        pos
    );

    _StpFeedback[COORD_TEXTURE2D_X(pos)] = feedback;

#if !ENABLE_QUALITY_MODE
    _StpColor[COORD_TEXTURE2D_X(pos)] = color;
#endif
}
