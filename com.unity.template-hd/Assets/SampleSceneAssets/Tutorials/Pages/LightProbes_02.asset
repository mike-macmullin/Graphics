%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: ff771ccdf4150419d9ff4d342b069aae, type: 3}
  m_Name: LightProbes_02
  m_EditorClassIdentifier: 
  Title:
    m_Untranslated: 'Highlight: Dilation'
  m_Paragraphs:
    m_Items:
    - m_Type: 6
      Title:
        m_Untranslated: 
      Text:
        m_Untranslated: 
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 2800000, guid: dba7af2c858b3e8419de858d1f56abb5, type: 3}
      m_Video: {fileID: 0}
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
    - m_Type: 0
      Title:
        m_Untranslated: 
      Text:
        m_Untranslated: '<b>Adaptive Probe Volume</b> system has many features. Going
          through all of them would take too long, so in this tutorial we will cover
          the ones we actually use in the project. On the last page however, we''ll
          provide links to the documentation and videos that cover the rest.


          Firstly
          we will cover the <b>Dilation.</b> Since the probe placement is automatic,
          some of them may end up inside walls or other static objects. Probes that
          sample backfaces are considered to be invalid and may cause lighting artifacts.
          An example of this can be seen in the image above. Note that the wall itself
          is not affected as it''s lit using lightmaps.


          <b>Dilation</b>
          replaces the invalid probes with valid data from neighboring probes, solving
          the issue.


          If you would like to explore the issue further,
          follow these steps:


          1. Re-enable APV if you disabled it in
          the last section and add a cube at this location <b>X:17 Y:2 Z:-2</b>


          2.
          Open the Lighting tab <b>Windows</b> > <b>Rendering</b> > <b>Lighting.</b>


          3.
          Under <b>Probe Volumes</b> > <b>Probe Invalidity Settings,</b> uncheck
          <b>Enable Dilation.</b>


          4. Optionally, reduce the baking quality
          to medium or draft, for faster bakes under <b>Scene</b> > <b>Lighting Settings</b>
          > <b>Lighting Setting Asset.</b>


          5. Rebake the lighting by
          hitting the <b>Generate Lighting</b> button on the bottom.'
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 0}
      m_Video: {fileID: 0}
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
  m_CameraSettings:
    m_CameraMode: 1
    m_FocusMode: 0
    m_Orthographic: 0
    m_Size: 0.8660253
    m_Pivot: {x: 17.65045, y: 2.008143, z: -1.55602}
    m_Rotation: {x: -0.020402448, y: 0.94459444, z: -0.059666716, w: -0.32229057}
    m_FrameObject:
      m_SceneGuid: 
      m_GameObjectGuid: 
      m_SerializedComponentType:
        m_TypeName: 
      m_ComponentIndex: 0
      m_AssetObject: {fileID: 0}
      m_Prefab: {fileID: 0}
    m_Enabled: 1
  NextButton:
    m_Untranslated: Next
  DoneButton:
    m_Untranslated: Done
  m_CompletedSound: {fileID: 0}
  m_AutoAdvance: 0
  Showing:
    m_PersistentCalls:
      m_Calls: []
  Shown:
    m_PersistentCalls:
      m_Calls: []
  Staying:
    m_PersistentCalls:
      m_Calls: []
  CriteriaValidated:
    m_PersistentCalls:
      m_Calls: []
  MaskingSettingsChanged:
    m_PersistentCalls:
      m_Calls: []
  NonMaskingSettingsChanged:
    m_PersistentCalls:
      m_Calls: []
  m_OnBeforePageShown:
    m_PersistentCalls:
      m_Calls: []
  m_OnAfterPageShown:
    m_PersistentCalls:
      m_Calls: []
  m_OnTutorialPageStay:
    m_PersistentCalls:
      m_Calls: []
  m_OnBeforeTutorialQuit:
    m_PersistentCalls:
      m_Calls: []
  m_NextButton: 
  m_DoneButton: 
